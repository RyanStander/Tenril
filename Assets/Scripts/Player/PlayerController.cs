//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.1
//     from Assets/PlayerController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerController"",
    ""maps"": [
        {
            ""name"": ""CharacterControls"",
            ""id"": ""191d3e36-d213-45df-b518-f7e681e38d27"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f2b13905-b8d1-41dc-8177-33b6ac69eb03"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""743ef377-52dc-43b5-a7ea-bea35033cac2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""0c21c37e-ae07-4c39-863d-ee969794c197"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""fd581256-d941-4346-bf56-cc9776dcb36e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""90e61187-3613-4766-b2fa-24a573833840"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""2ee6cf1b-1ade-478c-bce7-c4c2b913d539"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quickslot Left"",
                    ""type"": ""Button"",
                    ""id"": ""ce8a1d06-8963-4c7d-9b29-6235392febaf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quickslot Right"",
                    ""type"": ""Button"",
                    ""id"": ""d566d818-8b65-46db-8c65-7ea5f4312843"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quickslot Use"",
                    ""type"": ""Button"",
                    ""id"": ""3ac6aa4a-52aa-4f74-9d25-1d381fee5086"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Draw/Sheath"",
                    ""type"": ""Button"",
                    ""id"": ""1f47c479-784c-4acd-a068-f1c742678285"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenMenu"",
                    ""type"": ""Button"",
                    ""id"": ""420a0b25-c24e-4df2-8f11-812a4569ed42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Open Map"",
                    ""type"": ""Button"",
                    ""id"": ""04ea4e08-8ea4-4564-9afe-e279ef19d146"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Strong Attack"",
                    ""type"": ""Button"",
                    ""id"": ""e839406f-fc55-467d-87f5-f3ce87b9b083"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weak Attack"",
                    ""type"": ""Button"",
                    ""id"": ""43e180dd-cc35-4a2d-8d94-e967ef628531"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special Attack"",
                    ""type"": ""Button"",
                    ""id"": ""dd3032a3-5862-4563-8522-242058fac4d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""993417fb-cd70-4c5f-b3ec-6ab6256c1e73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Parry"",
                    ""type"": ""Button"",
                    ""id"": ""efa49ef8-9994-40cf-9535-0d2557e49832"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lock On"",
                    ""type"": ""Button"",
                    ""id"": ""b2a11934-e499-4477-bbae-cb7adf944118"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spellcasting Mode"",
                    ""type"": ""Button"",
                    ""id"": ""13f904bb-fb5d-45bb-a6b0-408ec4a97477"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 1"",
                    ""type"": ""Button"",
                    ""id"": ""d42ca1b0-a383-44e9-9da8-f2b0ef8c9d99"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 2"",
                    ""type"": ""Button"",
                    ""id"": ""ec772f53-f05b-4813-a188-d9da7dbf905d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 3"",
                    ""type"": ""Button"",
                    ""id"": ""41927309-95d7-46db-8c23-b6d1425a55d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 4"",
                    ""type"": ""Button"",
                    ""id"": ""db0c194b-f44a-44cd-a18f-9071904fcd56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 5"",
                    ""type"": ""Button"",
                    ""id"": ""ed5b4b8f-068b-4a78-97b9-18ba3d1e49cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 6"",
                    ""type"": ""Button"",
                    ""id"": ""93c46d4f-4631-4af2-8117-6ed969b34560"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 7"",
                    ""type"": ""Button"",
                    ""id"": ""b421a54c-ab12-440a-9762-146ff4fcc6ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 8"",
                    ""type"": ""Button"",
                    ""id"": ""38830cc7-9a6d-4000-af07-206208d37f63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockOnSwapTargetInput"",
                    ""type"": ""Value"",
                    ""id"": ""03910c78-7a88-4d0c-9e7f-93c54d6926ee"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""9973bdd8-78f4-4245-aad1-ad95e9ccaf8c"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""308c9d0a-4620-43af-9c41-549dea381f21"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8f8fc72b-d290-4ad3-958e-7d4ac4b9db17"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3043cc47-5b7a-435b-82ad-b23291411d88"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""712c6980-4680-4169-89ea-608184aa5ba5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""551cd107-8534-4b3c-a97e-b267e182c86f"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""97faede1-5f70-4db4-aa45-889c744dc7ab"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3f503252-9342-492c-88a1-1afbd63ac136"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""13504137-3561-4ff4-a161-29879401ad33"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8b49d7b5-5f3b-4989-b880-5d04d694ba87"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f92da61f-5a95-4955-b3f6-6accfd8c166b"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0d1edb2-3460-4938-9431-a7934c9c395c"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21813f2e-97f9-4726-9077-48da78357fe6"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""054a81ac-5753-4bec-8a4a-2e3f8d19f914"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fcda652-e62b-4b21-9552-c3ef87005ac5"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bcf45bf8-0b31-4605-9bf0-478dbe047954"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6447e6b3-af8f-4c23-b31f-06a5d6f462c1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d62c1127-06b5-4073-82d1-24d1ace4ad5d"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88c7f094-915b-48c0-9633-276cfa1c7f70"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9b7a49a-2b23-4fdc-a8e8-581f8fa14f1a"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd451d9c-98af-4c84-ad98-a128d34a066f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Quickslot Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f147fd5-0243-41d5-8a18-e9d62f41f57b"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Quickslot Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69ddb59b-3817-4d91-aa54-182b685e4db2"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Quickslot Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04cf0566-90ca-42be-a899-f8d531848f81"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Quickslot Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcb7c38b-49c2-4fa9-b768-99b36525fe7a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Quickslot Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abfe83f2-e4f1-4d19-b350-945d9e637f9b"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Quickslot Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d74c929-bc80-4a43-bd62-ac9f5f9feea8"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Draw/Sheath"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4634a990-b3c7-469d-889a-9dab99a3d0ed"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Draw/Sheath"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96beef36-18f1-4646-8194-29099ec8c6a3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2facdac-a7f7-4226-b4f0-1057973a77ed"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b50cff6-226b-4279-aee8-a2904b8a7690"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Open Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""537392cd-22cc-43cd-a8f3-37b525ee9148"",
                    ""path"": ""<DualShockGamepad>/touchpadButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Open Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1972ecc9-8b55-4467-9470-60c39dd3cdcd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Strong Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5530c4a1-fb82-4da1-ada7-c96c86c99e03"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Strong Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""135c3faf-27cf-49de-b067-dafb9b7490f8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Weak Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc1ab957-6231-49da-9050-57c14fb06ced"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Weak Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""223be532-5c0a-4fb3-9625-e12a3197117a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Special Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ddf35fbc-65a2-488a-a43c-aa4b7275cf86"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Special Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbce5d72-e042-4d1e-ae6d-e05c9179b310"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1e72736-0864-4bfe-a371-56c822407a1a"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""607a2736-d04d-4cd3-b4c2-7f775d83eba3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Parry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7a37f76-e521-4cfb-a747-d094d1af87c1"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Parry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57ad613f-7b07-42dd-b623-babe8abd8c6d"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Lock On"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27c65cc4-b9eb-4f37-9130-4a605cdc6957"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Lock On"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d9010a6-5c5c-453f-8007-b67c57d14ee4"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Spell 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1762d3d7-3c95-4779-b123-939f3b12ef70"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Spell 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10be7805-3fc9-40bc-9f0a-801aa227cf30"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Spell 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3516d78-0686-4d54-ac4d-074be4d43a9d"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Spell 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db923e24-73b4-4d2b-a344-d30976a5d567"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Spell 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""851d349f-24a9-4ea5-bc39-fe6be1b95a68"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Spell 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e40a4612-b2b3-44b1-99f7-813ec36dd1fb"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Spell 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a97f7a40-d0f3-423e-bcbd-15d1156e748c"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Spell 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c709ddc0-793d-4dbf-a1da-a08896c8cd1a"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Spell 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a213db20-521f-41e1-8c14-804800223845"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Spell 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""672b6be7-d479-4908-8085-e75b2241ca60"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Spell 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3a9affe-310f-4074-8366-1056c1280a23"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Spell 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""942df2ca-6976-4381-96aa-3197b690cfaa"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Spell 7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f548de3-f68b-42f7-97f5-0d07f2ea4c48"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Spell 7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88e2e905-12cd-4b6f-9efd-310ae55b04d5"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Spell 8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5bc89f8-e5c3-496d-9f8f-14e2ebb6d3bf"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Spell 8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c848cd0-8e02-4b8b-9179-49aa0ec91fe0"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Spellcasting Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bdfe05a-5660-4d72-8fab-d768680c123c"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spellcasting Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9353a55-fa7e-43af-b0da-d38ca2721479"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""LockOnSwapTargetInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07d5522e-c09d-4f54-906e-ecbdd14d75fb"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LockOnSwapTargetInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIControls"",
            ""id"": ""8753d95b-9538-48bb-8f3a-3bbd6ea3ea6f"",
            ""actions"": [
                {
                    ""name"": ""Close Menus"",
                    ""type"": ""Button"",
                    ""id"": ""1c71a10b-970e-4be3-8b92-0775d3764b32"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fcd4dd6d-b37c-4936-b8dc-52af7c2333fd"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Close Menus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3adc1261-29ad-41e7-a324-862604dd000a"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Close Menus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard & Mouse"",
            ""bindingGroup"": ""Keyboard & Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // CharacterControls
        m_CharacterControls = asset.FindActionMap("CharacterControls", throwIfNotFound: true);
        m_CharacterControls_Movement = m_CharacterControls.FindAction("Movement", throwIfNotFound: true);
        m_CharacterControls_Look = m_CharacterControls.FindAction("Look", throwIfNotFound: true);
        m_CharacterControls_Sprint = m_CharacterControls.FindAction("Sprint", throwIfNotFound: true);
        m_CharacterControls_Dodge = m_CharacterControls.FindAction("Dodge", throwIfNotFound: true);
        m_CharacterControls_Jump = m_CharacterControls.FindAction("Jump", throwIfNotFound: true);
        m_CharacterControls_Interact = m_CharacterControls.FindAction("Interact", throwIfNotFound: true);
        m_CharacterControls_QuickslotLeft = m_CharacterControls.FindAction("Quickslot Left", throwIfNotFound: true);
        m_CharacterControls_QuickslotRight = m_CharacterControls.FindAction("Quickslot Right", throwIfNotFound: true);
        m_CharacterControls_QuickslotUse = m_CharacterControls.FindAction("Quickslot Use", throwIfNotFound: true);
        m_CharacterControls_DrawSheath = m_CharacterControls.FindAction("Draw/Sheath", throwIfNotFound: true);
        m_CharacterControls_OpenMenu = m_CharacterControls.FindAction("OpenMenu", throwIfNotFound: true);
        m_CharacterControls_OpenMap = m_CharacterControls.FindAction("Open Map", throwIfNotFound: true);
        m_CharacterControls_StrongAttack = m_CharacterControls.FindAction("Strong Attack", throwIfNotFound: true);
        m_CharacterControls_WeakAttack = m_CharacterControls.FindAction("Weak Attack", throwIfNotFound: true);
        m_CharacterControls_SpecialAttack = m_CharacterControls.FindAction("Special Attack", throwIfNotFound: true);
        m_CharacterControls_Block = m_CharacterControls.FindAction("Block", throwIfNotFound: true);
        m_CharacterControls_Parry = m_CharacterControls.FindAction("Parry", throwIfNotFound: true);
        m_CharacterControls_LockOn = m_CharacterControls.FindAction("Lock On", throwIfNotFound: true);
        m_CharacterControls_SpellcastingMode = m_CharacterControls.FindAction("Spellcasting Mode", throwIfNotFound: true);
        m_CharacterControls_Spell1 = m_CharacterControls.FindAction("Spell 1", throwIfNotFound: true);
        m_CharacterControls_Spell2 = m_CharacterControls.FindAction("Spell 2", throwIfNotFound: true);
        m_CharacterControls_Spell3 = m_CharacterControls.FindAction("Spell 3", throwIfNotFound: true);
        m_CharacterControls_Spell4 = m_CharacterControls.FindAction("Spell 4", throwIfNotFound: true);
        m_CharacterControls_Spell5 = m_CharacterControls.FindAction("Spell 5", throwIfNotFound: true);
        m_CharacterControls_Spell6 = m_CharacterControls.FindAction("Spell 6", throwIfNotFound: true);
        m_CharacterControls_Spell7 = m_CharacterControls.FindAction("Spell 7", throwIfNotFound: true);
        m_CharacterControls_Spell8 = m_CharacterControls.FindAction("Spell 8", throwIfNotFound: true);
        m_CharacterControls_LockOnSwapTargetInput = m_CharacterControls.FindAction("LockOnSwapTargetInput", throwIfNotFound: true);
        // UIControls
        m_UIControls = asset.FindActionMap("UIControls", throwIfNotFound: true);
        m_UIControls_CloseMenus = m_UIControls.FindAction("Close Menus", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CharacterControls
    private readonly InputActionMap m_CharacterControls;
    private ICharacterControlsActions m_CharacterControlsActionsCallbackInterface;
    private readonly InputAction m_CharacterControls_Movement;
    private readonly InputAction m_CharacterControls_Look;
    private readonly InputAction m_CharacterControls_Sprint;
    private readonly InputAction m_CharacterControls_Dodge;
    private readonly InputAction m_CharacterControls_Jump;
    private readonly InputAction m_CharacterControls_Interact;
    private readonly InputAction m_CharacterControls_QuickslotLeft;
    private readonly InputAction m_CharacterControls_QuickslotRight;
    private readonly InputAction m_CharacterControls_QuickslotUse;
    private readonly InputAction m_CharacterControls_DrawSheath;
    private readonly InputAction m_CharacterControls_OpenMenu;
    private readonly InputAction m_CharacterControls_OpenMap;
    private readonly InputAction m_CharacterControls_StrongAttack;
    private readonly InputAction m_CharacterControls_WeakAttack;
    private readonly InputAction m_CharacterControls_SpecialAttack;
    private readonly InputAction m_CharacterControls_Block;
    private readonly InputAction m_CharacterControls_Parry;
    private readonly InputAction m_CharacterControls_LockOn;
    private readonly InputAction m_CharacterControls_SpellcastingMode;
    private readonly InputAction m_CharacterControls_Spell1;
    private readonly InputAction m_CharacterControls_Spell2;
    private readonly InputAction m_CharacterControls_Spell3;
    private readonly InputAction m_CharacterControls_Spell4;
    private readonly InputAction m_CharacterControls_Spell5;
    private readonly InputAction m_CharacterControls_Spell6;
    private readonly InputAction m_CharacterControls_Spell7;
    private readonly InputAction m_CharacterControls_Spell8;
    private readonly InputAction m_CharacterControls_LockOnSwapTargetInput;
    public struct CharacterControlsActions
    {
        private @PlayerController m_Wrapper;
        public CharacterControlsActions(@PlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_CharacterControls_Movement;
        public InputAction @Look => m_Wrapper.m_CharacterControls_Look;
        public InputAction @Sprint => m_Wrapper.m_CharacterControls_Sprint;
        public InputAction @Dodge => m_Wrapper.m_CharacterControls_Dodge;
        public InputAction @Jump => m_Wrapper.m_CharacterControls_Jump;
        public InputAction @Interact => m_Wrapper.m_CharacterControls_Interact;
        public InputAction @QuickslotLeft => m_Wrapper.m_CharacterControls_QuickslotLeft;
        public InputAction @QuickslotRight => m_Wrapper.m_CharacterControls_QuickslotRight;
        public InputAction @QuickslotUse => m_Wrapper.m_CharacterControls_QuickslotUse;
        public InputAction @DrawSheath => m_Wrapper.m_CharacterControls_DrawSheath;
        public InputAction @OpenMenu => m_Wrapper.m_CharacterControls_OpenMenu;
        public InputAction @OpenMap => m_Wrapper.m_CharacterControls_OpenMap;
        public InputAction @StrongAttack => m_Wrapper.m_CharacterControls_StrongAttack;
        public InputAction @WeakAttack => m_Wrapper.m_CharacterControls_WeakAttack;
        public InputAction @SpecialAttack => m_Wrapper.m_CharacterControls_SpecialAttack;
        public InputAction @Block => m_Wrapper.m_CharacterControls_Block;
        public InputAction @Parry => m_Wrapper.m_CharacterControls_Parry;
        public InputAction @LockOn => m_Wrapper.m_CharacterControls_LockOn;
        public InputAction @SpellcastingMode => m_Wrapper.m_CharacterControls_SpellcastingMode;
        public InputAction @Spell1 => m_Wrapper.m_CharacterControls_Spell1;
        public InputAction @Spell2 => m_Wrapper.m_CharacterControls_Spell2;
        public InputAction @Spell3 => m_Wrapper.m_CharacterControls_Spell3;
        public InputAction @Spell4 => m_Wrapper.m_CharacterControls_Spell4;
        public InputAction @Spell5 => m_Wrapper.m_CharacterControls_Spell5;
        public InputAction @Spell6 => m_Wrapper.m_CharacterControls_Spell6;
        public InputAction @Spell7 => m_Wrapper.m_CharacterControls_Spell7;
        public InputAction @Spell8 => m_Wrapper.m_CharacterControls_Spell8;
        public InputAction @LockOnSwapTargetInput => m_Wrapper.m_CharacterControls_LockOnSwapTargetInput;
        public InputActionMap Get() { return m_Wrapper.m_CharacterControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterControlsActions set) { return set.Get(); }
        public void SetCallbacks(ICharacterControlsActions instance)
        {
            if (m_Wrapper.m_CharacterControlsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnMovement;
                @Look.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLook;
                @Sprint.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSprint;
                @Dodge.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnDodge;
                @Dodge.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnDodge;
                @Dodge.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnDodge;
                @Jump.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnJump;
                @Interact.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnInteract;
                @QuickslotLeft.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnQuickslotLeft;
                @QuickslotLeft.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnQuickslotLeft;
                @QuickslotLeft.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnQuickslotLeft;
                @QuickslotRight.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnQuickslotRight;
                @QuickslotRight.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnQuickslotRight;
                @QuickslotRight.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnQuickslotRight;
                @QuickslotUse.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnQuickslotUse;
                @QuickslotUse.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnQuickslotUse;
                @QuickslotUse.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnQuickslotUse;
                @DrawSheath.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnDrawSheath;
                @DrawSheath.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnDrawSheath;
                @DrawSheath.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnDrawSheath;
                @OpenMenu.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnOpenMenu;
                @OpenMenu.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnOpenMenu;
                @OpenMenu.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnOpenMenu;
                @OpenMap.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnOpenMap;
                @OpenMap.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnOpenMap;
                @OpenMap.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnOpenMap;
                @StrongAttack.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnStrongAttack;
                @StrongAttack.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnStrongAttack;
                @StrongAttack.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnStrongAttack;
                @WeakAttack.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnWeakAttack;
                @WeakAttack.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnWeakAttack;
                @WeakAttack.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnWeakAttack;
                @SpecialAttack.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpecialAttack;
                @SpecialAttack.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpecialAttack;
                @SpecialAttack.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpecialAttack;
                @Block.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnBlock;
                @Block.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnBlock;
                @Block.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnBlock;
                @Parry.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnParry;
                @Parry.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnParry;
                @Parry.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnParry;
                @LockOn.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLockOn;
                @LockOn.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLockOn;
                @LockOn.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLockOn;
                @SpellcastingMode.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpellcastingMode;
                @SpellcastingMode.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpellcastingMode;
                @SpellcastingMode.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpellcastingMode;
                @Spell1.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell1;
                @Spell1.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell1;
                @Spell1.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell1;
                @Spell2.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell2;
                @Spell2.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell2;
                @Spell2.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell2;
                @Spell3.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell3;
                @Spell3.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell3;
                @Spell3.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell3;
                @Spell4.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell4;
                @Spell4.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell4;
                @Spell4.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell4;
                @Spell5.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell5;
                @Spell5.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell5;
                @Spell5.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell5;
                @Spell6.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell6;
                @Spell6.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell6;
                @Spell6.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell6;
                @Spell7.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell7;
                @Spell7.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell7;
                @Spell7.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell7;
                @Spell8.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell8;
                @Spell8.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell8;
                @Spell8.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnSpell8;
                @LockOnSwapTargetInput.started -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLockOnSwapTargetInput;
                @LockOnSwapTargetInput.performed -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLockOnSwapTargetInput;
                @LockOnSwapTargetInput.canceled -= m_Wrapper.m_CharacterControlsActionsCallbackInterface.OnLockOnSwapTargetInput;
            }
            m_Wrapper.m_CharacterControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Dodge.started += instance.OnDodge;
                @Dodge.performed += instance.OnDodge;
                @Dodge.canceled += instance.OnDodge;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @QuickslotLeft.started += instance.OnQuickslotLeft;
                @QuickslotLeft.performed += instance.OnQuickslotLeft;
                @QuickslotLeft.canceled += instance.OnQuickslotLeft;
                @QuickslotRight.started += instance.OnQuickslotRight;
                @QuickslotRight.performed += instance.OnQuickslotRight;
                @QuickslotRight.canceled += instance.OnQuickslotRight;
                @QuickslotUse.started += instance.OnQuickslotUse;
                @QuickslotUse.performed += instance.OnQuickslotUse;
                @QuickslotUse.canceled += instance.OnQuickslotUse;
                @DrawSheath.started += instance.OnDrawSheath;
                @DrawSheath.performed += instance.OnDrawSheath;
                @DrawSheath.canceled += instance.OnDrawSheath;
                @OpenMenu.started += instance.OnOpenMenu;
                @OpenMenu.performed += instance.OnOpenMenu;
                @OpenMenu.canceled += instance.OnOpenMenu;
                @OpenMap.started += instance.OnOpenMap;
                @OpenMap.performed += instance.OnOpenMap;
                @OpenMap.canceled += instance.OnOpenMap;
                @StrongAttack.started += instance.OnStrongAttack;
                @StrongAttack.performed += instance.OnStrongAttack;
                @StrongAttack.canceled += instance.OnStrongAttack;
                @WeakAttack.started += instance.OnWeakAttack;
                @WeakAttack.performed += instance.OnWeakAttack;
                @WeakAttack.canceled += instance.OnWeakAttack;
                @SpecialAttack.started += instance.OnSpecialAttack;
                @SpecialAttack.performed += instance.OnSpecialAttack;
                @SpecialAttack.canceled += instance.OnSpecialAttack;
                @Block.started += instance.OnBlock;
                @Block.performed += instance.OnBlock;
                @Block.canceled += instance.OnBlock;
                @Parry.started += instance.OnParry;
                @Parry.performed += instance.OnParry;
                @Parry.canceled += instance.OnParry;
                @LockOn.started += instance.OnLockOn;
                @LockOn.performed += instance.OnLockOn;
                @LockOn.canceled += instance.OnLockOn;
                @SpellcastingMode.started += instance.OnSpellcastingMode;
                @SpellcastingMode.performed += instance.OnSpellcastingMode;
                @SpellcastingMode.canceled += instance.OnSpellcastingMode;
                @Spell1.started += instance.OnSpell1;
                @Spell1.performed += instance.OnSpell1;
                @Spell1.canceled += instance.OnSpell1;
                @Spell2.started += instance.OnSpell2;
                @Spell2.performed += instance.OnSpell2;
                @Spell2.canceled += instance.OnSpell2;
                @Spell3.started += instance.OnSpell3;
                @Spell3.performed += instance.OnSpell3;
                @Spell3.canceled += instance.OnSpell3;
                @Spell4.started += instance.OnSpell4;
                @Spell4.performed += instance.OnSpell4;
                @Spell4.canceled += instance.OnSpell4;
                @Spell5.started += instance.OnSpell5;
                @Spell5.performed += instance.OnSpell5;
                @Spell5.canceled += instance.OnSpell5;
                @Spell6.started += instance.OnSpell6;
                @Spell6.performed += instance.OnSpell6;
                @Spell6.canceled += instance.OnSpell6;
                @Spell7.started += instance.OnSpell7;
                @Spell7.performed += instance.OnSpell7;
                @Spell7.canceled += instance.OnSpell7;
                @Spell8.started += instance.OnSpell8;
                @Spell8.performed += instance.OnSpell8;
                @Spell8.canceled += instance.OnSpell8;
                @LockOnSwapTargetInput.started += instance.OnLockOnSwapTargetInput;
                @LockOnSwapTargetInput.performed += instance.OnLockOnSwapTargetInput;
                @LockOnSwapTargetInput.canceled += instance.OnLockOnSwapTargetInput;
            }
        }
    }
    public CharacterControlsActions @CharacterControls => new CharacterControlsActions(this);

    // UIControls
    private readonly InputActionMap m_UIControls;
    private IUIControlsActions m_UIControlsActionsCallbackInterface;
    private readonly InputAction m_UIControls_CloseMenus;
    public struct UIControlsActions
    {
        private @PlayerController m_Wrapper;
        public UIControlsActions(@PlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseMenus => m_Wrapper.m_UIControls_CloseMenus;
        public InputActionMap Get() { return m_Wrapper.m_UIControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIControlsActions set) { return set.Get(); }
        public void SetCallbacks(IUIControlsActions instance)
        {
            if (m_Wrapper.m_UIControlsActionsCallbackInterface != null)
            {
                @CloseMenus.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCloseMenus;
                @CloseMenus.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCloseMenus;
                @CloseMenus.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCloseMenus;
            }
            m_Wrapper.m_UIControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CloseMenus.started += instance.OnCloseMenus;
                @CloseMenus.performed += instance.OnCloseMenus;
                @CloseMenus.canceled += instance.OnCloseMenus;
            }
        }
    }
    public UIControlsActions @UIControls => new UIControlsActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard & Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface ICharacterControlsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnQuickslotLeft(InputAction.CallbackContext context);
        void OnQuickslotRight(InputAction.CallbackContext context);
        void OnQuickslotUse(InputAction.CallbackContext context);
        void OnDrawSheath(InputAction.CallbackContext context);
        void OnOpenMenu(InputAction.CallbackContext context);
        void OnOpenMap(InputAction.CallbackContext context);
        void OnStrongAttack(InputAction.CallbackContext context);
        void OnWeakAttack(InputAction.CallbackContext context);
        void OnSpecialAttack(InputAction.CallbackContext context);
        void OnBlock(InputAction.CallbackContext context);
        void OnParry(InputAction.CallbackContext context);
        void OnLockOn(InputAction.CallbackContext context);
        void OnSpellcastingMode(InputAction.CallbackContext context);
        void OnSpell1(InputAction.CallbackContext context);
        void OnSpell2(InputAction.CallbackContext context);
        void OnSpell3(InputAction.CallbackContext context);
        void OnSpell4(InputAction.CallbackContext context);
        void OnSpell5(InputAction.CallbackContext context);
        void OnSpell6(InputAction.CallbackContext context);
        void OnSpell7(InputAction.CallbackContext context);
        void OnSpell8(InputAction.CallbackContext context);
        void OnLockOnSwapTargetInput(InputAction.CallbackContext context);
    }
    public interface IUIControlsActions
    {
        void OnCloseMenus(InputAction.CallbackContext context);
    }
}
